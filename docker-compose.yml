version: "3.3"

services:

################################## pihole -> Werbeblocker
# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'Europe/Berlin'
      WEBPASSWORD: ${pihole_PW}
      PIHOLE_DNS_: '1.1.1.1;1.0.0.1;2606:4700:4700::1111;2606:4700:4700::1001'
      IPv6: 'true'
    #ServerIP: --net=host mode requires
    # Volumes store your data between container upgrades
    volumes:
       - '/mnt/dockerconf/pihole/etc-pihole/:/etc/pihole/'
       - '/mnt/dockerconf/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    dns:
      - 192.168.178.1
      - 9.9.9.9
      - 1.1.1.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    hostname: pi.hole
################################## watchtower -> Docker auto updater
  watchtower:
      container_name: watchtower
      image: containrrr/watchtower
      environment:
        - WATCHTOWER_SCHEDULE="0 0 4 * * *"
        - WATCHTOWER_CLEANUP=true
        - TZ='Europe/Berlin'
        - WATCHTOWER_NOTIFICATIONS=email
        - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${EMAIL_FROM}
        - WATCHTOWER_NOTIFICATION_EMAIL_TO=${EMAIL_TO}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${EMAIL_SERVER}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${EMAIL_SERVER_USER}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${EMAIL_SERVER_PASSWORD}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${EMAIL_SERVER_PORT}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      restart: always

################################## unifi-controller
  unifi-controller:
    image: lscr.io/linuxserver/unifi-controller:latest
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/dockerconf/unifi/config:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8443:8443
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514 #optional
    restart: unless-stopped

################################## heimdall -> Web Interface Manager
  heimdall:
    container_name: heimdall
    image: linuxserver/heimdall:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /mnt/dockerconf/heimdall/config:/config
    ports:
      - 81:80
      - 444:443
    restart: unless-stopped

################################# homepage -> Web Interface Manager
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3000:3000
    volumes:
      - /mnt/dockerconf/homepage/homepageconfig:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
      - /mnt/dockerconf/homepage/images:/app/public/images
    environment:
      PUID: $PUID # read them from .env
      PGID: $PGID # read them from .env
    restart: unless-stopped
################################# MeTube YT-DL -> Webinterface
  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - /mnt/dockerconf/metube/downloads:/downloads
    
################################# Uptime Kuma -> Uptime Monitor
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
       - /mnt/dockerconf/uptime-kuma/data:/app/data
    ports:
      - 3001:3001
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true


